local library = loadstring(game:HttpGet('https://raw.githubusercontent.com/wally-rblx/uwuware-ui/main/main.lua'))()

local Aiming = loadstring(game:HttpGet("https://pastebin.com/raw/SnBTdXsz"))()
local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera

local DaHoodSettings = {
    SilentAim = false,
    AimLock = true,
    AimLockKeybind = Enum.KeyCode.Q,
    Prediction = 0.165
}

Aiming.TeamCheck(false)
Aiming.VisibleCheck = false
Aiming.FOV = 30
Aiming.FOVSides = 80
Aiming.FOVColour = Color3.fromRGB(41, 72, 122)

ESP:Toggle(false)
ESP.Tracers = false
ESP.Names = false
ESP.Boxes = false
ESP.FaceCamera = true
ESP.Color = Color3.fromRGB(41, 72, 122)

do
    local window = library:CreateWindow('MOAT') do
        local folder = window:AddFolder('Aimbot') do
            folder:AddToggle({text = 'Silent aim', flag = 'silentAim', callback = function(bool) DaHoodSettings.SilentAim = bool end})
            folder:AddToggle({text = 'FOV circle', flag = 'fovCircle', callback = function(bool) Aiming.ShowFOV = bool end})
            folder:AddSlider({text = 'FOV radius', flag = 'fovRadius', min = 0, max = 250, float = 0.2, callback = function(value) Aiming.FOV = value end})
        end

        local folder = window:AddFolder('Visuals') do
            folder:AddToggle({text = 'Enable', flag = 'enableESP', callback = function(bool) ESP:Toggle(bool) end})
            folder:AddToggle({text = 'Box ESP', flag = 'boxESP', callback = function(bool) ESP.Boxes = bool end})
            folder:AddToggle({text = 'Name ESP', flag = 'nameESP', callback = function(bool) ESP.Names = bool end})
            folder:AddToggle({text = 'Tracer ESP', flag = 'tracerESP', callback = function(bool) ESP.Tracers = bool end})
        end

        local folder = window:AddFolder('Credits') do
            folder:AddLabel({text = 'ebay - Scripting/Script Fix'})
            folder:AddLabel({text = 'Jan - UI library'})
        end
        window:AddDivider()
        window:AddButton({text = 'Unload script', callback = function() 
            shared._unload()
        end})
        window:AddBind({text = 'Menu toggle', key = Enum.KeyCode.RightControl, callback = function() library:Close() end})
    end

    library:Init()
end

function Aiming.Check()
    if not (Aiming.Enabled == true and Aiming.Selected ~= LocalPlayer and Aiming.SelectedPart ~= nil) then
        return false
    end

    local Character = Aiming.Character(Aiming.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil

    if (KOd or Grabbed) then
        return false
    end

    return true
end

local __index
__index = hookmetamethod(game, "__index", function(t, k)
    if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and Aiming.Check()) then
        local SelectedPart = Aiming.SelectedPart

        if (DaHoodSettings.SilentAim and (k == "Hit" or k == "Target")) then
            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

            return (k == "Hit" and Hit or SelectedPart)
        end
    end

    return __index(t, k)
end) 


if shared._unload then
    pcall(shared._unload)
end

function shared._unload()
    if shared._id then
        pcall(runService.UnbindFromRenderStep, runService, shared._id)
    end

    if library.open then
        library:Close()
    end

    library.base:ClearAllChildren()
    library.base:Destroy()
end
